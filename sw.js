(()=>{"use strict";var e={258:()=>{try{self["workbox:core:6.5.1"]&&_()}catch(e){}},60:()=>{try{self["workbox:precaching:6.5.1"]&&_()}catch(e){}},18:()=>{try{self["workbox:routing:6.5.1"]&&_()}catch(e){}},847:()=>{try{self["workbox:strategies:6.5.1"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(258);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(60);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(847);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(18);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"2d76a769b83086076b67869b0718b232","url":"404.html"},{"revision":"6dcaf909d65fd6650a3d47d57e1c33c3","url":"assets/css/styles.e392690a.css"},{"revision":"1a6870d546ceb5b4e4dd1c3829aff370","url":"assets/js/08c91acd.87fe18f4.js"},{"revision":"6ccbd9adb0a68348995fd99db5a3e11d","url":"assets/js/1467.743ca377.js"},{"revision":"791161ec940eb5eb6d6a8d1389a9e4aa","url":"assets/js/17896441.3f2f9c3c.js"},{"revision":"b49094c6f0205a94d90c94391bfa281e","url":"assets/js/19c9239f.497d9e30.js"},{"revision":"9cbecff2ec21429be475379dd377a9ae","url":"assets/js/1a4e3797.fc232d8b.js"},{"revision":"61a9bfc8076009761f5794565132d058","url":"assets/js/1be78505.40561d06.js"},{"revision":"99cd7a1d0c7787a73cfe24829a21a72f","url":"assets/js/1df93b7f.ace35544.js"},{"revision":"91d012327736060dd52f0a31d88c154a","url":"assets/js/23374ca6.814610ab.js"},{"revision":"a88efd810bd9393eabf230057ce46e04","url":"assets/js/247783bb.a74fcdcc.js"},{"revision":"0930516418f7662113cb974a7fd53fea","url":"assets/js/2598.98471a39.js"},{"revision":"392ed11ca79be864ad1ad12d7be58235","url":"assets/js/278d831b.622d5c5d.js"},{"revision":"f50be86e5d52d2a342392607db01c157","url":"assets/js/27da239e.022337f9.js"},{"revision":"fb813bded1644173f13f7427eda23be6","url":"assets/js/2c700dca.eed5d87a.js"},{"revision":"392d411df6e1324b881fd703258efb1b","url":"assets/js/2c714a47.1dc61c85.js"},{"revision":"19a33726caed620fde519a83f18dbe8f","url":"assets/js/3bd92c1c.c40f5a3e.js"},{"revision":"56007cc05346b2a04e8c7a91376ebebe","url":"assets/js/3ca010ae.7a4d241b.js"},{"revision":"e0597b491ef2043afbb57bc3dc7efeb9","url":"assets/js/417802b6.bcc266aa.js"},{"revision":"05e6ed52d8d6fd6fb802f8092b27a75a","url":"assets/js/444147dc.a4464e41.js"},{"revision":"3840653fa09b7a05919cc93996952771","url":"assets/js/4542f1aa.dca3324b.js"},{"revision":"4b9a4c6e15e7c976f04442ea453e49f5","url":"assets/js/45c35fe9.73c309ea.js"},{"revision":"01737145efb9dc3f5db5d533af6e40fe","url":"assets/js/4735cba8.6bd51906.js"},{"revision":"de42b4d7a348bd40b2a1f123fd20d805","url":"assets/js/59b068d1.f96d52ee.js"},{"revision":"fc34f420ab572cf794ee3fc60a7fb944","url":"assets/js/59b20312.e9970fb7.js"},{"revision":"03a4a89805c0851c75b0b06a15b73b4e","url":"assets/js/6057.225d7284.js"},{"revision":"ffb6e4fdf03b9250d0193b6b550f3745","url":"assets/js/6856bc5e.cd823fb0.js"},{"revision":"ea402da37f88d53a9db758e7eef7b742","url":"assets/js/7109fcb9.25c89f55.js"},{"revision":"65607816b4f5286fb017c91508b6bd14","url":"assets/js/7556a661.b8632fa2.js"},{"revision":"62b8d97a365c9f23d9c3fc70f33493f9","url":"assets/js/7595.00823f07.js"},{"revision":"6941b01204ea253842a5865e289445c4","url":"assets/js/8085.7864c359.js"},{"revision":"ea465235d511635aab6f040850df7f5b","url":"assets/js/8152.8616137f.js"},{"revision":"684f1375f3956149cdf0685a33900a19","url":"assets/js/8498.8ae8f672.js"},{"revision":"990e434e45ae6e2c0d1344465549ca56","url":"assets/js/9076.a6b54708.js"},{"revision":"9e250b31f52d9b5999543bbf0a5406b1","url":"assets/js/93426447.3ac58379.js"},{"revision":"355eebb24371b2ab0b272bd9392bdd4e","url":"assets/js/935f2afb.d39b78b8.js"},{"revision":"5e8da6790918455caf91743be39b8cf5","url":"assets/js/9720aa09.8b5524bc.js"},{"revision":"3cbc217eec67c68fda8ba026c1db9c01","url":"assets/js/a7434565.2559b2e6.js"},{"revision":"05db71acdaa224a62ff608a37ee28e5e","url":"assets/js/b0dd63e9.fb4b4d0c.js"},{"revision":"5798e9a76ce92973faf3392d64d24236","url":"assets/js/b326c38e.6fc1518e.js"},{"revision":"d5c0259257b08298e796b6c172d3ea27","url":"assets/js/b8c60b87.142ecb3d.js"},{"revision":"87990a9d331a387733567302d2d35008","url":"assets/js/bd0ab364.9aeea43a.js"},{"revision":"27b75aadb29f981ded27fa08dfdc987b","url":"assets/js/c18f6375.e80c9d70.js"},{"revision":"e1d90edd1bf06fc905edce0c0eae1f25","url":"assets/js/c19b4e8e.46c0c027.js"},{"revision":"94209ea0b09e3e30ddead6174fb4651a","url":"assets/js/cf08fff7.88960703.js"},{"revision":"e1e3b6914e9178f30ef49fc41b58fa44","url":"assets/js/d50d5676.cf8cdc36.js"},{"revision":"da85d2e134585990a12ab8524cf3b9d7","url":"assets/js/d70a5677.17761a51.js"},{"revision":"86f7291f0ba6862c0564127b672629e4","url":"assets/js/d8af3d6e.b3016de6.js"},{"revision":"bf22c4f6e59b92e0476288fefd8d78b6","url":"assets/js/de48decc.3a01aee7.js"},{"revision":"57516b31b15e853df46eed5905a933e8","url":"assets/js/decc4105.5a95dc55.js"},{"revision":"66058e70bb1b39cc7c64d776666613b3","url":"assets/js/df759228.244361c1.js"},{"revision":"054c55bc665dfe3cd2d59cf3d28035bd","url":"assets/js/e36987ae.e119132f.js"},{"revision":"e000011dd37a443db65530889b998477","url":"assets/js/f92d365d.4c6ff89f.js"},{"revision":"cd6a4aa62c47aedd63308a9fd82d8f14","url":"assets/js/fdb945e9.d0c5740a.js"},{"revision":"5449f0d8af46f1a5f5f28658cfa1bcb1","url":"assets/js/ff7bed0d.2dfcfa92.js"},{"revision":"2eeecd30c3b8bc800fefb6eccea5c1eb","url":"assets/js/main.4453b5be.js"},{"revision":"3b974a5188a439c5353bc4971e8e6029","url":"assets/js/runtime~main.4f37441a.js"},{"revision":"1265564d11e889b6c944d9114ebfbc77","url":"index.html"},{"revision":"cceb40df27672fde8c7b96ad334d5cd6","url":"intro.html"},{"revision":"5f6fc76782c61b6966d397950dd7555c","url":"java-install-update.html"},{"revision":"9de0c1c99854cb76025abff99c9590c3","url":"manifest.json"},{"revision":"0e9293d1465775bc72b6e15a3c13c9ae","url":"paper.html"},{"revision":"c81f59343f26973fb1de861b7c1fab33","url":"paper/aikars-flags.html"},{"revision":"88b8c8791b35e1d323d5c992c2a440b4","url":"paper/getting-started.html"},{"revision":"3a1c520c9b6e89b26c3fca7a573a732e","url":"paper/per-world-configuration.html"},{"revision":"884de1df963be5d61c00479e5c6f0522","url":"paper/reference/paper-global-configuration.html"},{"revision":"20603da5735169182c276beccf77debe","url":"paper/reference/paper-per-world-configuration.html"},{"revision":"232ccd82901ca6c336d6a444c92a23c6","url":"paper/updating.html"},{"revision":"199a9ff540baa06d6ffaa2a86410f310","url":"papermc/assets.html"},{"revision":"ab809a9094b44a176c12409135ea6663","url":"papermc/contact.html"},{"revision":"0b41bedf1b8840494ac5a848e09700cd","url":"papermc/downloads-api.html"},{"revision":"ac07185e60c0d48f8b790c2a0196d578","url":"search.html"},{"revision":"27945cfe48b9aaa0b406e639427e7ce4","url":"velocity.html"},{"revision":"7ad40aa806b3e00c6c1f25d06d0f3e26","url":"velocity/built-in-commands.html"},{"revision":"066af37bda15ffcb72943dbdde8e0617","url":"velocity/comparisons-to-other-proxies.html"},{"revision":"c33d0a5a5fb2f53bd4a3f6880b2dd093","url":"velocity/configuration.html"},{"revision":"eb62dd162a38f8815271f1f332ff9dde","url":"velocity/credits.html"},{"revision":"b8b0d85f1dbb00a52d44f19042c8494d","url":"velocity/developers.html"},{"revision":"f230680478f81877cf3472ceea327bc0","url":"velocity/developers/api-basics.html"},{"revision":"a1a15eb06e11f586a8091be00b50378f","url":"velocity/developers/command-api.html"},{"revision":"bb07ec5994c362bba0d49b0bbc0eff46","url":"velocity/developers/creating-your-first-plugin.html"},{"revision":"cdc1904aec3e4b7c0614c3bdb963294f","url":"velocity/developers/dependency-management.html"},{"revision":"0ea9ca97f424db085b443671c5d71ae1","url":"velocity/developers/event-api.html"},{"revision":"9c98a32e0599f5a61ceff80202d61b6a","url":"velocity/developers/pitfalls.html"},{"revision":"fb34dadfb342c8591d3ab5779b24ee73","url":"velocity/developers/porting-plugins-from-velocity-1.html"},{"revision":"7ecd193aa52dc52ed4a66353ef8862a3","url":"velocity/developers/scheduler-api.html"},{"revision":"4a340b096d1a3cb6afee63e76103dd60","url":"velocity/faq.html"},{"revision":"195d13614da378e367814ac949f7f944","url":"velocity/getting-started.html"},{"revision":"9ccb7ddea7fee9763659b900c2e6cd5a","url":"velocity/migration.html"},{"revision":"d5aebad6ff07893ba9b5a1eed8a1f01e","url":"velocity/player-information-forwarding.html"},{"revision":"e9e893ec2b1088e195c1e3c4c321b8db","url":"velocity/security.html"},{"revision":"0ee9f6baaac2a3c8468a62c8cef80663","url":"velocity/server-compatibility.html"},{"revision":"673b1a8658f77d3ce398b3a9c268fb21","url":"velocity/tuning.html"},{"revision":"c3ba35d69c5996ef6352ce760e216af6","url":"velocity/why-velocity.html"},{"revision":"1ab9c1b840d40082a3924ab256c48155","url":"waterfall.html"},{"revision":"7636d739e24b87cee03a3de9664c4c5a","url":"waterfall/configuration.html"},{"revision":"e381f1d1d2eb1b65e6424516292f70e5","url":"waterfall/getting-started.html"},{"revision":"728cb4af05ea79eca18631a0a7f5950e","url":"assets/images/papermc_logomark_500-b69f67cabd469b3d0485c20a912e84fc.png"},{"revision":"2cc84f324fa1386d14831b64d1c303fb","url":"assets/images/pterodactyl-manual-59004882b8766e775ceefd62de2cbc50.png"},{"revision":"f923cb235d9275c8e766c27f6e8646a6","url":"assets/images/pterodactyl-prompt-08eaa04490182b153a7e203d414da64b.png"},{"revision":"27a331ad0d4f9b1b056d7aa7c497380c","url":"img/favicon.ico"},{"revision":"cf40f7154e8833e87c5a15b3c19cec64","url":"img/icons/icon-128x128.png"},{"revision":"d8c14f548f07f8b9f34900842e514de3","url":"img/icons/icon-144x144.png"},{"revision":"2352005bdb6116062586418be2feb0ee","url":"img/icons/icon-152x152.png"},{"revision":"69e1e4818e8c72f0b3faf7a71abeda26","url":"img/icons/icon-192x192.png"},{"revision":"e603d44fde637d0428169e42314c3039","url":"img/icons/icon-384x384.png"},{"revision":"ebde541848f562b741056bde05472bba","url":"img/icons/icon-512x512.png"},{"revision":"1fbf5b497e5d12fd86393175f9eaf139","url":"img/icons/icon-72x72.png"},{"revision":"50adede2c2bda637f507879fbb543480","url":"img/icons/icon-96x96.png"},{"revision":"69b156c91d208aff640e1016c38fb004","url":"img/logo.svg"},{"revision":"23c02a74c76235daf1a513381ba42449","url":"img/og-image.png"},{"revision":"249f3a6448ee743c8f87f15dd0c0b48c","url":"img/paper.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();