(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.1"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.1"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.1"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.1"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,s),i.exports}(()=>{s(913);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),i=e=>e||n(a.precache),r=e=>e||n(a.runtime);function c(e,t){const s=t();return e.waitUntil(s),s}s(977);function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:a}=e;if(!a)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),i=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:i.href}}class h{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class l{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let u;async function f(e,s){let a=null;if(e.url){a=new URL(e.url).origin}if(a!==self.location.origin)throw new t("cross-origin-copy-response",{origin:a});const n=e.clone(),i={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(i):i,c=function(){if(void 0===u){const e=new Response("");if("body"in e)try{new Response(e.body),u=!0}catch(e){u=!1}u=!1}return u}()?n.body:await n.blob();return new Response(c,r)}function d(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class p{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const g=new Set;s(873);function y(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new p,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let a=y(e);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const i=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:i,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:i.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=y(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,i=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(i,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:i,event:this.event})||void 0;return s}async cachePut(e,s){const a=y(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const i=await this.getCacheKey(a,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this._ensureResponseSafeToCache(s);if(!c)return!1;const{cacheName:o,matchOptions:h}=this._strategy,l=await self.caches.open(o),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,a){const n=d(t.url,s);if(t.url===n)return e.match(t,a);const i=Object.assign(Object.assign({},a),{ignoreSearch:!0}),r=await e.keys(t,i);for(const t of r)if(n===d(t.url,s))return e.match(t,a)}(l,i.clone(),["__WB_REVISION__"],h):null;try{await l.put(i,u?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of g)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:f,newResponse:c.clone(),request:i,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=y(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class _ extends class{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new w(this,{event:t,request:s,params:a}),i=this._getResponse(n,s,t);return[i,this._awaitComplete(i,n,s,t)]}async _getResponse(e,s,a){let n;await e.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const i of e.iterateCallbacks("handlerDidError"))if(n=await i({error:t,event:a,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,i;try{n=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(i=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:i}),t.destroy(),i)throw i}}{constructor(e={}){e.cacheName=i(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(_.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{0;const t=n.integrity,i=e.integrity,r=!i||i===t;if(a=await s.fetch(new Request(e,{integrity:i||t})),t&&r){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,a.clone());0}}return a}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(e);if(!await s.cachePut(e,a.clone()))throw new t("bad-precaching-response",{url:e.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==_.copyRedirectedCacheableResponsesPlugin&&(a===_.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(_.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}_.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},_.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await f(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new _({cacheName:i(e),plugins:[...t,new l({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const a of e){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:e,url:n}=o(a),i="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==a.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(e,a.integrity)}if(this._urlsToCacheKeys.set(n,e),this._urlsToCacheModes.set(n,i),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return c(e,(async()=>{const t=new h;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),i=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:i,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return c(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}s(80);(async()=>{const e=function(){const e=JSON.parse(new URLSearchParams(self.location.search).get("params"));return e.debug&&console.log("[Docusaurus-PWA][SW]: Service Worker params:",e),e}(),t=[{"revision":"52b6b033027633f73a671c692289675f","url":"404.html"},{"revision":"9a137601a0ea2cf5990bcb890f3e0872","url":"assets/css/styles.5f10caf6.css"},{"revision":"06cfd22fa16be3065f9261eeeb438e6c","url":"assets/js/08c91acd.f9de8aa4.js"},{"revision":"11b8e6457e646d10d2a721579cf8fa8b","url":"assets/js/17896441.4e242368.js"},{"revision":"77a1b69bdac880826a3d46012dd50197","url":"assets/js/19c9239f.19502472.js"},{"revision":"736bb69ebbe42163e13f996617ed6e3e","url":"assets/js/1a4e3797.ff96d539.js"},{"revision":"96fc9feb4c7196bee2249dfe6cfffdbd","url":"assets/js/1be78505.edfdaf8b.js"},{"revision":"8f48a4891203fa5180733e00194df159","url":"assets/js/1df93b7f.b7233752.js"},{"revision":"9671abaf3fbced8b10f8520125979c2a","url":"assets/js/2004.319fad66.js"},{"revision":"44b2592fd5437449ef29215fe386b2cc","url":"assets/js/2110.ad6e8b90.js"},{"revision":"accf94af0bbc338f6814c00f761409ba","url":"assets/js/23374ca6.129da4bd.js"},{"revision":"a88efd810bd9393eabf230057ce46e04","url":"assets/js/247783bb.a74fcdcc.js"},{"revision":"182ad5f23101781c2a9324a44d270ab6","url":"assets/js/2699.388d4f29.js"},{"revision":"89bfd32adf491ecdad3537904a2edc76","url":"assets/js/278d831b.3901eedc.js"},{"revision":"534ff12761c091d7c1c0eeea97acfed2","url":"assets/js/27da239e.83ac0294.js"},{"revision":"2b88cd4d336aa751f984603d55109f68","url":"assets/js/2c700dca.f54c372d.js"},{"revision":"5013f192a7b3f241c11461723cbfc316","url":"assets/js/2c714a47.c771425a.js"},{"revision":"bd4e3cc4afdda7aabd62ee9560aca411","url":"assets/js/3200.0204726e.js"},{"revision":"3f9d1badfa841620bd159a0930ed0fd3","url":"assets/js/3bd92c1c.e0bd3d37.js"},{"revision":"d9fd4a94ab23e0f07f6e4f8455bf1c5d","url":"assets/js/3ca010ae.22cc8536.js"},{"revision":"e22a02f49987b7194f3caeeeb67a5e4a","url":"assets/js/417802b6.1b38212a.js"},{"revision":"c98b84eaf7c4a63ffce9abce5b0dbb9b","url":"assets/js/444147dc.9125130f.js"},{"revision":"be38c1ea20730c1d502b90ad01483668","url":"assets/js/4542f1aa.35e9a7e1.js"},{"revision":"bb143d5ff603e60ebfc812908e56a782","url":"assets/js/45c35fe9.7468f61e.js"},{"revision":"37f1f34d4fa542b3358a473eaf3523dc","url":"assets/js/4735cba8.1eca00cb.js"},{"revision":"c5f4dbfd1fc83686d5f53385cb261c79","url":"assets/js/5131.9a1e8009.js"},{"revision":"de42b4d7a348bd40b2a1f123fd20d805","url":"assets/js/59b068d1.f96d52ee.js"},{"revision":"e732577ca1a4e50c69f1a1fe7cbfec66","url":"assets/js/59b20312.db2d7467.js"},{"revision":"4430586a4d7ade29c1f3b5c0e4acc933","url":"assets/js/6856bc5e.7b4e0ea0.js"},{"revision":"5a0aafccc443095b70527b12cb815750","url":"assets/js/6945.7e7c6451.js"},{"revision":"8add7180ccb344d200dd6fe14c22dfa0","url":"assets/js/7109fcb9.d31008dc.js"},{"revision":"1fbd1f859d522fec8bb508f7faeec8d1","url":"assets/js/7556a661.17d72a91.js"},{"revision":"6e418399e14fd570c5af493bc905088e","url":"assets/js/8894.8579f5eb.js"},{"revision":"5230946766f784c650c21041401a0336","url":"assets/js/93426447.74b283a7.js"},{"revision":"355eebb24371b2ab0b272bd9392bdd4e","url":"assets/js/935f2afb.d39b78b8.js"},{"revision":"578a36a792f90e2ca17f14e8eed382e7","url":"assets/js/9664.6b483f98.js"},{"revision":"abec0c8e14bd1c4172af17bfc52f7c23","url":"assets/js/9720aa09.41318120.js"},{"revision":"3cbc217eec67c68fda8ba026c1db9c01","url":"assets/js/a7434565.2559b2e6.js"},{"revision":"cd012fa5f69ab68b048125b4616526a9","url":"assets/js/b0dd63e9.b11990cb.js"},{"revision":"466356af93b4cf003b161e736aea0326","url":"assets/js/b326c38e.936651fb.js"},{"revision":"c9e0a704c528682e518b913efc1edb13","url":"assets/js/b8c60b87.77c744a4.js"},{"revision":"9d4bde2e96bac4eaa298c12b31aad99c","url":"assets/js/bd0ab364.43bce12a.js"},{"revision":"bc0ec56f18add4ab1e98b9fb58ddcc50","url":"assets/js/c18f6375.3fcd3e38.js"},{"revision":"4ff47f8011345390b10c5e1f9ea89aa3","url":"assets/js/c19b4e8e.74dc22ae.js"},{"revision":"2c76128221f457cdb5eeb25c755a3f73","url":"assets/js/cf08fff7.a7bf9f66.js"},{"revision":"b826a56c5e9dc023ea30fd13fa6ff9df","url":"assets/js/d50d5676.92758391.js"},{"revision":"64ef957ab13c2cdc308c1e9e43fa8aad","url":"assets/js/d70a5677.62685ca5.js"},{"revision":"7ec4cc395a38af15f0156dd78f2dc886","url":"assets/js/d8af3d6e.004e4bb1.js"},{"revision":"7e599efca61b423d9bf85e93cf38b19c","url":"assets/js/de48decc.fd243abc.js"},{"revision":"b16e64587cce4238c15c9ab34a111eaf","url":"assets/js/decc4105.ff69a3f7.js"},{"revision":"d3f0e42a158547bf90133d4e6aaeb38d","url":"assets/js/df759228.e21fcab6.js"},{"revision":"cfb213c88d5a7bffeb428720b1d4c371","url":"assets/js/e36987ae.3458574b.js"},{"revision":"a74375e51cd9ced8ded965504267b85d","url":"assets/js/f92d365d.6d3381ba.js"},{"revision":"a587722a49ffcbcc1b1ace737298b938","url":"assets/js/fdb945e9.affaa7a6.js"},{"revision":"69d82150da6454a1a1c940c543dce4f2","url":"assets/js/ff7bed0d.998cf770.js"},{"revision":"9f291e1254045a478e169ecc58a13ed4","url":"assets/js/main.ba1ff895.js"},{"revision":"e40e9e6ac03495d9007f6728442215a1","url":"assets/js/runtime~main.ef3d264d.js"},{"revision":"dd85a9f3941e0514437ad7bbda0eab6d","url":"index.html"},{"revision":"747291a0239f16a601b5a4672fdded95","url":"intro.html"},{"revision":"3f0e430a56ac40451e100d258ae173b8","url":"java-install-update.html"},{"revision":"9de0c1c99854cb76025abff99c9590c3","url":"manifest.json"},{"revision":"74fdad90ee95083c43250b0e0c214038","url":"paper.html"},{"revision":"c9f73eb56053f5c6f464b4f9e43c85b5","url":"paper/aikars-flags.html"},{"revision":"262d5509fce2d2c2930c7e0b4c5bb3ba","url":"paper/getting-started.html"},{"revision":"25ab0c941b5a89b8e713f62667ceda2f","url":"paper/per-world-configuration.html"},{"revision":"2137ced4db8d02b1445957d2ed92afb8","url":"paper/reference/paper-global-configuration.html"},{"revision":"0bf8ecf0f5337de8d5925f36d1b96ab7","url":"paper/reference/paper-per-world-configuration.html"},{"revision":"aeefcda2af189a00edac5bdf6ce531dd","url":"paper/updating.html"},{"revision":"e18b5b3b4a1f22ac587d34fff4e89738","url":"papermc/assets.html"},{"revision":"20ae1b0fc56b7617320c0ef54fca56ab","url":"papermc/contact.html"},{"revision":"4f4e26d1043feb10660f6e8c76b334d0","url":"papermc/downloads-api.html"},{"revision":"9747a89b1761e8213b242e9d33ce8174","url":"search.html"},{"revision":"3ebe6882222ef95e1f7e00e0dbd779c5","url":"velocity.html"},{"revision":"6375e3de468330ed8a91e7e461ed9ff2","url":"velocity/built-in-commands.html"},{"revision":"8dfe928659d215cdb131f8d3b00c143a","url":"velocity/comparisons-to-other-proxies.html"},{"revision":"77df92f9a71c28fb39e0b7328eec2452","url":"velocity/configuration.html"},{"revision":"ea3f98e74ca2bec3422259a6c34f869b","url":"velocity/credits.html"},{"revision":"83b4590a135d5da60058c7630242cf6b","url":"velocity/developers.html"},{"revision":"0e01af6e89a33ccf004fe430018db537","url":"velocity/developers/api-basics.html"},{"revision":"29f207431614a22c3922bdc0a417db25","url":"velocity/developers/command-api.html"},{"revision":"f3e7b0145a033be57c51659e1ae92f4e","url":"velocity/developers/creating-your-first-plugin.html"},{"revision":"848cd98aac3221830a02ed6478fb4806","url":"velocity/developers/dependency-management.html"},{"revision":"a891a69abe6bfbaa50529b067ffb9185","url":"velocity/developers/event-api.html"},{"revision":"3b659476a81e7125898bfb90dd4fff74","url":"velocity/developers/pitfalls.html"},{"revision":"975a21da65f422a1189b9a87f5b65752","url":"velocity/developers/porting-plugins-from-velocity-1.html"},{"revision":"b5a60ca0e7b505d5f24213abc7610974","url":"velocity/developers/scheduler-api.html"},{"revision":"afde3c6d6c6ce5c2df084485191ab516","url":"velocity/faq.html"},{"revision":"57d8fc0a2a6ad147bea2c52b6542d9d6","url":"velocity/getting-started.html"},{"revision":"bbd9a203d1eeb792814586b780e4ea24","url":"velocity/migration.html"},{"revision":"4d2b915aa3d51c392f323bf7582e5dc6","url":"velocity/player-information-forwarding.html"},{"revision":"c18e3e4a9ee81beea212c8f536e26fb5","url":"velocity/security.html"},{"revision":"c506977c3e61956dea571b40036696be","url":"velocity/server-compatibility.html"},{"revision":"cf38b94e33110e24470c8d942db5c9ef","url":"velocity/tuning.html"},{"revision":"92cf8c557d454668aa7514469f337499","url":"velocity/why-velocity.html"},{"revision":"3980306ca1de3264f00291267532de9a","url":"waterfall.html"},{"revision":"a6010d2b0b65b9a85f7ce1666a31eac9","url":"waterfall/configuration.html"},{"revision":"4cfc9cd4f2eed498804b50a5a1e3e76f","url":"waterfall/getting-started.html"},{"revision":"728cb4af05ea79eca18631a0a7f5950e","url":"assets/images/papermc_logomark_500-b69f67cabd469b3d0485c20a912e84fc.png"},{"revision":"2cc84f324fa1386d14831b64d1c303fb","url":"assets/images/pterodactyl-manual-59004882b8766e775ceefd62de2cbc50.png"},{"revision":"f923cb235d9275c8e766c27f6e8646a6","url":"assets/images/pterodactyl-prompt-08eaa04490182b153a7e203d414da64b.png"},{"revision":"27a331ad0d4f9b1b056d7aa7c497380c","url":"img/favicon.ico"},{"revision":"cf40f7154e8833e87c5a15b3c19cec64","url":"img/icons/icon-128x128.png"},{"revision":"d8c14f548f07f8b9f34900842e514de3","url":"img/icons/icon-144x144.png"},{"revision":"2352005bdb6116062586418be2feb0ee","url":"img/icons/icon-152x152.png"},{"revision":"69e1e4818e8c72f0b3faf7a71abeda26","url":"img/icons/icon-192x192.png"},{"revision":"e603d44fde637d0428169e42314c3039","url":"img/icons/icon-384x384.png"},{"revision":"ebde541848f562b741056bde05472bba","url":"img/icons/icon-512x512.png"},{"revision":"1fbf5b497e5d12fd86393175f9eaf139","url":"img/icons/icon-72x72.png"},{"revision":"50adede2c2bda637f507879fbb543480","url":"img/icons/icon-96x96.png"},{"revision":"69b156c91d208aff640e1016c38fb004","url":"img/logo.svg"},{"revision":"23c02a74c76235daf1a513381ba42449","url":"img/og-image.png"},{"revision":"249f3a6448ee743c8f87f15dd0c0b48c","url":"img/paper.png"}],s=new v({fallbackToNetwork:!0});e.offlineMode&&(s.addToCacheList(t),e.debug&&console.log("[Docusaurus-PWA][SW]: addToCacheList",{precacheManifest:t})),await async function(e){}(),self.addEventListener("install",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: install event",{event:t}),t.waitUntil(s.install(t))})),self.addEventListener("activate",(t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: activate event",{event:t}),t.waitUntil(s.activate(t))})),self.addEventListener("fetch",(async t=>{if(e.offlineMode){const a=t.request.url,n=function(e){const t=[],s=new URL(e,self.location.href);return s.origin!==self.location.origin||(s.search="",s.hash="",t.push(s.href),s.pathname.endsWith("/")?t.push(`${s.href}index.html`):t.push(`${s.href}/index.html`)),t}(a);for(let i=0;i<n.length;i+=1){const r=n[i],c=s.getCacheKeyForURL(r);if(c){const s=caches.match(c);e.debug&&console.log("[Docusaurus-PWA][SW]: serving cached asset",{requestURL:a,possibleURL:r,possibleURLs:n,cacheKey:c,cachedResponse:s}),t.respondWith(s);break}}}})),self.addEventListener("message",(async t=>{e.debug&&console.log("[Docusaurus-PWA][SW]: message event",{event:t});const s=t.data?.type;"SKIP_WAITING"===s&&self.skipWaiting()}))})()})()})();